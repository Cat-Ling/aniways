services:
  traefik:
    image: traefik:v3.1
    command:
      - "--providers.docker"
      - "--providers.docker.exposedbydefault=false"
      - "--entryPoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      - "--certificatesresolvers.myresolver.acme.email=${LETSENCRYPT_EMAIL}"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
    ports:
      - mode: host
        protocol: tcp
        published: 80
        target: 80
      - mode: host
        protocol: tcp
        published: 443
        target: 443
    volumes:
      - letsencrypt:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock

  web:
    image: ghcr.io/coeeter/aniways:${GITHUB_SHA:-latest}
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.web.loadbalancer.server.port=3000"
      - "traefik.http.routers.web.rule=Host(`${DOMAIN}`)"
      - "traefik.http.routers.web.entrypoints=websecure"
      - "traefik.http.routers.web.tls.certresolver=myresolver"
    secrets:
      - env
    environment:
      - NODE_ENV=production
      - CRON_KEY=${CRON_KEY}
      - DATABASE_URL=postgres://postgres:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
    deploy:
      update_config:
        order: start-first
    depends_on:
      - db

  cron:
    image: alpine/curl
    command: >
      sh -c "
        echo '0 0 * * * curl -H \"X-Cron-Key: ${CRON_KEY}\" -X POST https://${DOMAIN}/api/cron' > /etc/crontabs/root && \
        crond -f -l 2
      "
    depends_on:
      - web
    environment:
      - CRON_KEY=${CRON_KEY}
      - DOMAIN=${DOMAIN}

  db:
    image: postgres
    user: postgres
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    healthcheck:
      test: ["CMD", "pg_isready"]
      interval: 10s
      timeout: 5s
      start_period: 30s
      retries: 5

secrets:
  env:
    external: true

volumes:
  letsencrypt:
  db-data:
