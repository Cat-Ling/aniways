openapi: 3.0.0
info:
  title: Aniways API
  version: 1.0.0
  description: The Aniways API allows you to interact with the Aniways service

servers:
  - url: https://api.aniways.xyz

paths:
  /auth/login:
    get:
      summary: MAL OAuth2 login
      description: Starts MAL OAuth2 login flow
      tags:
        - Authentication
      responses:
        '302':
          description: Redirect to MAL login page
          headers:
            Location:
              schema:
                type: string
                format: uri
        '401':
          description: Unauthorized

  /auth/callback:
    get:
      summary: OAuth2 callback
      description: Callback for MAL OAuth2 login flow
      tags:
        - Authentication
      parameters:
        - name: code
          in: query
          required: true
          description: The authorization code
          schema:
            type: string
        - name: state
          in: query
          required: true
          description: The state parameter
          schema:
            type: string
      responses:
        '302':
          description: Redirect to the front-end application
          headers:
            Location:
              schema:
                type: string
                format: uri
        '400':
          description: Bad request, if the `code` or `state` parameters are missing or invalid.
        '401':
          description: Unauthorized, if the OAuth access token could not be validated.

  /auth/logout:
    get:
      summary: Logout
      description: Logs out the authenticated user
      tags:
        - Authentication
      parameters:
        - name: redirectUrl
          in: query
          description: The URL to redirect to after logging out
          required: false
          schema:
            type: string
      security:
        - session: [ ]
      responses:
        '302':
          description: Redirect to the front-end application
          headers:
            Location:
              schema:
                type: string
                format: uri
        '401':
          description: Unauthorized

  /auth/me:
    get:
      summary: Get authenticated user
      description: Retrieves the authenticated user
      tags:
        - Authentication
      security:
        - session: [ ]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: Unauthorized

  /anime/recently-updated:
    get:
      summary: Get Recently Updated Anime
      description: Retrieves the anime that have been recently updated
      tags:
        - Anime
      parameters:
        - $ref: '#/components/parameters/PageParam'
        - $ref: '#/components/parameters/ItemsPerPageParam'
      responses:
        '200':
          description: Successfully retrieved recently updated anime
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAnimeResponse'

  /anime/{id}:
    get:
      summary: Get Anime Metadata
      description: Retrieves the metadata of an anime by its ID
      tags:
        - Anime
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Anime metadata retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnimeMetadata'
        '400':
          description: Invalid anime ID
        '404':
          description: Anime not found
        '500':
          description: Internal server error

  /anime/seasonal:
    get:
      summary: Get Seasonal Anime
      description: Retrieves the anime that are currently airing
      tags:
        - Anime
      responses:
        '200':
          description: Successfully retrieved seasonal anime
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AnilistAnimeDto'

  /anime/trending:
    get:
      summary: Get Trending Anime
      description: Retrieves the anime that are currently trending
      tags:
        - Anime
      responses:
        '200':
          description: Successfully retrieved trending anime
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AnimeDto'

  /anime/top:
    get:
      summary: Get Top Anime
      description: Retrieves the top anime
      tags:
        - Anime
      responses:
        '200':
          description: Successfully retrieved top anime
          content:
            application/json:
              schema:
                type: object
                properties:
                  today:
                    type: array
                    description: The top anime of today
                    items:
                      $ref: '#/components/schemas/AnimeDto'
                  week:
                    type: array
                    description: The top anime of the week
                    items:
                      $ref: '#/components/schemas/AnimeDto'
                  month:
                    type: array
                    description: The top anime of the month
                    items:
                      $ref: '#/components/schemas/AnimeDto'

  /anime/popular:
    get:
      summary: Get Popular Anime
      description: Retrieves the popular anime
      tags:
        - Anime
      responses:
        '200':
          description: Successfully retrieved popular anime
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AnilistAnimeDto'

  /anime/search:
    get:
      summary: Search Anime
      description: Searches for anime by a query
      tags:
        - Anime
      parameters:
        - name: query
          in: query
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/PageParam'
      responses:
        '200':
          description: Successfully retrieved search results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAnimeResponse'

  /anime/{id}/trailer:
    get:
      summary: Get Anime Trailer
      description: Retrieves the trailer of an anime by its ID
      tags:
        - Anime
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Trailer URL retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  trailer:
                    type: string
        '400':
          description: Invalid anime ID
        '404':
          description: Trailer not found

  /anime/{id}/episodes:
    get:
      summary: Get Anime Episodes
      description: Retrieves the episodes of an anime by its ID
      tags:
        - Anime
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved episodes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EpisodeDto'

  /anime/episodes/servers/{episodeId}:
    get:
      summary: Get Episode Servers
      description: Retrieves the servers of an episode by its ID
      tags:
        - Anime
      parameters:
        - name: episodeId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved episode servers
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EpisodeServerDto'

  /anime/list/{username}:
    get:
      summary: Get User Anime List
      description: Retrieves the anime list of a user by their username
      tags:
        - Anime
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/PageParam'
        - $ref: '#/components/parameters/ItemsPerPageParam'
        - name: status
          in: query
          schema:
            type: string
        - name: sort
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved user's anime list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnimeListDto'

  /anime/list/{id}:
    patch:
      summary: Update Anime List Entry
      tags:
        - Anime
      security:
        - session: [ ]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAnimeListRequest'
      responses:
        '200':
          description: Successfully updated anime list entry
        '400':
          description: Invalid request
        '401':
          description: Unauthorized

    delete:
      summary: Delete Anime List Entry
      tags:
        - Anime
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully deleted anime list entry
        '400':
          description: Invalid request
        '401':
          description: Unauthorized

  /anime/genres:
    get:
      summary: Get All Genres
      tags:
        - Anime
      responses:
        '200':
          description: Successfully retrieved genres
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string

  /anime/genres/{genre}:
    get:
      summary: Get Anime by Genre
      tags:
        - Anime
      parameters:
        - name: genre
          in: path
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/PageParam'
        - $ref: '#/components/parameters/ItemsPerPageParam'
      responses:
        '200':
          description: Successfully retrieved anime by genre
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAnimeResponse'

  /anime/random:
    get:
      summary: Get Random Anime
      tags:
        - Anime
      responses:
        '200':
          description: Successfully retrieved random anime
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnimeDto'

  /anime/random/{genre}:
    get:
      summary: Get Random Anime by Genre
      tags:
        - Anime
      parameters:
        - name: genre
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved random anime by genre
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnimeDto'

  /settings:
    get:
      summary: Get settings
      description: Retrieves the current settings for the authenticated user
      tags:
        - Settings
      security:
        - session: [ ]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Settings'
        '401':
          description: Unauthorized

    post:
      summary: Update settings
      description: Updates the settings for the authenticated user
      tags:
        - Settings
      security:
        - session: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Settings'
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized


components:
  parameters:
    PageParam:
      name: page
      in: query
      schema:
        type: integer
        default: 1
        minimum: 1
    ItemsPerPageParam:
      name: itemsPerPage
      in: query
      schema:
        type: integer
        default: 30
        minimum: 1
        maximum: 100

  securitySchemes:
    session:
      type: apiKey
      in: cookie
      name: session

  schemas:
    PaginatedAnimeResponse:
      type: object
      properties:
        pageInfo:
          $ref: '#/components/schemas/PageInfo'
        items:
          type: array
          items:
            $ref: '#/components/schemas/AnimeDto'

    PageInfo:
      type: object
      description: Information about the pagination
      properties:
        totalPage:
          type: integer
          description: The total number of pages
        currentPage:
          type: integer
          description: The current page
        hasNextPage:
          type: boolean
          description: Whether there is a next page
        hasPreviousPage:
          type: boolean
          description: Whether there is a previous page

    AnimeDto:
      type: object
      properties:
        id:
          type: string
          description: The anime ID
        name:
          type: string
          description: The anime name
        jname:
          type: string
          description: The anime name in Japanese
        poster:
          type: string
          description: The URL of the poster
        genre:
          type: array
          items:
            type: string
          description: The genres of the anime
        malId:
          type: integer
          nullable: true
          description: The MyAnimeList ID
        anilistId:
          type: integer
          nullable: true
          description: The AniList ID
        lastEpisode:
          type: integer
          description: The last episode
          nullable: true

    AnimeMetadata:
      type: object
      properties:
        id:
          type: string
          description: The anime ID
        name:
          type: string
          description: The anime name
        jname:
          type: string
          description: The anime name in Japanese
        poster:
          type: string
          description: The URL of the poster
        genre:
          type: array
          items:
            type: string
          description: The genres of the anime
        malId:
          type: integer
          nullable: true
          description: The MyAnimeList ID
        anilistId:
          type: integer
          nullable: true
          description: The AniList ID
        lastEpisode:
          type: integer
          description: The last episode
          nullable: true
        metadata:
          type: object
          nullable: true
          description: The metadata of the anime
          properties:
            malId:
              type: integer
              description: The MyAnimeList ID
            description:
              type: string
              description: The description of the anime
            mainPicture:
              type: string
              description: The URL of the main picture
            mediaType:
              type: string
              description: The media type of the anime
            rating:
              type: string
              nullable: true
              description: The rating of the anime
            avgEpDuration:
              type: integer
              nullable: true
              description: The average episode duration
            airingStatus:
              type: string
              description: The airing status
            totalEpisodes:
              type: integer
              nullable: true
              description: The total number of episodes
            studio:
              type: string
              nullable: true
              description: The studio of the anime
            rank:
              type: integer
              nullable: true
              description: The rank of the anime
            mean:
              type: number
              nullable: true
              description: The mean rating
            scoringUsers:
              type: integer
              description: The number of scoring users
            popularity:
              type: integer
              nullable: true
              description: The popularity of the anime
            airingStart:
              type: string
              nullable: true
              description: The airing start date
            airingEnd:
              type: string
              nullable: true
              description: The airing end date
            source:
              type: string
              nullable: true
              description: The source of the anime
            trailer:
              type: string
              nullable: true
              description: The URL of the trailer

    AnilistAnimeDto:
      type: object
      properties:
        id:
          type: string
          description: The anime ID
        title:
          type: string
          description: The anime title
        bannerImage:
          type: string
          nullable: true
          description: The URL of the banner image
        coverImage:
          type: string
          description: The URL of the cover image
        description:
          type: string
          description: The anime description
        startDate:
          type: string
          description: The start date of the anime
        type:
          type: string
          description: The type of the anime
        episodes:
          type: integer
          description: The number of episodes
        anime:
          $ref: '#/components/schemas/AnimeDto'

    EpisodeDto:
      type: object
      properties:
        id:
          type: string
          description: The episode ID
        title:
          type: string
          nullable: true
          description: The episode title
        number:
          type: integer
          description: The episode number
        isFiller:
          type: boolean
          description: Whether the episode is a filler

    EpisodeServerDto:
      type: object
      properties:
        type:
          type: string
          description: The type of the server
        serverName:
          type: string
          description: The name of the server
        url:
          type: string
          description: The URL of the stream

    AnimeListDto:
      type: object
      properties:
        pageInfo:
          type: object
          description: Information about the pagination
          properties:
            currentPage:
              type: integer
              description: The current page
            hasNextPage:
              type: boolean
              description: Whether there is a next page
            hasPreviousPage:
              type: boolean
              description: Whether there is a previous page
        items:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                description: The anime ID
              name:
                type: string
                description: The anime name
              jname:
                type: string
                description: The anime name in Japanese
              poster:
                type: string
                description: The URL of the poster
              totalEpisodes:
                type: integer
                description: The total number of episodes
              mediaType:
                type: string
                description: The media type of the anime
              mean:
                type: number
                description: The mean rating
              numScoringUsers:
                type: integer
                description: The number of scoring users
              listStatus:
                type: object
                properties:
                  status:
                    type: string
                    nullable: true
                    description: The status of the anime in the list
                  score:
                    type: number
                    nullable: true
                    description: The score of the anime in the list
                  num_episodes_watched:
                    type: integer
                    nullable: true
                    description: The number of episodes watched
                  is_rewatching:
                    type: boolean
                    nullable: true
                    description: Whether the anime is being rewatched
                  updated_at:
                    type: string
                    nullable: true
                    description: The date the anime was last updated
                  finish_date:
                    type: string
                    nullable: true
                    description: The date the anime was finished

    User:
      type: object
      properties:
        id:
          type: integer
          description: The user ID
        username:
          type: string
          description: The username
        picture:
          type: string
          description: The URL of the profile picture

    Settings:
      type: object
      properties:
        userId:
          type: integer
          description: The user ID of the authenticated user
        autoPlay:
          type: boolean
          description: Whether to automatically play videos
        autoNextEpisode:
          type: boolean
          description: Whether to automatically play the next episode
        autoUpdateMal:
          type: boolean
          description: Whether to automatically update MyAnimeList
      required:
        - userId
        - autoPlay
        - autoNextEpisode
        - autoUpdateMal
