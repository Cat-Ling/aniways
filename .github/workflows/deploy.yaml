name: Deploy

on:
  push:
    branches: "main"

permissions:
  packages: write

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: https://ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ghcr.io/coeeter/aniways:latest
            ghcr.io/coeeter/aniways:${{ github.sha }}

  deploy:
    runs-on: ubuntu-latest
    needs:
      - build-and-push-image
    steps:
      - uses: actions/checkout@v4

      - name: Create Cron Key
        id: cron_key
        run: echo "::set-output name=CRON_KEY::$(openssl rand -hex 16)"

      - name: create env file
        run: |
          echo "GITHUB_SHA=${{ github.sha }}" >> ./env
          echo "MAL_CLIENT_ID=${{ secrets.MAL_CLIENT_ID }}" >> ./env
          echo "MAL_CLIENT_SECRET=${{ secrets.MAL_CLIENT_SECRET }}" >> ./env
          echo "MAL_SECRET_KEY=${{ secrets.MAL_SECRET_KEY }}" >> ./env
          echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> ./env
          echo "CRON_KEY=${{ steps.cron_key.outputs.CRON_KEY }}" >> ./env

      - name: Docker Stack Deploy
        uses: cssnr/stack-deploy-action@v1
        with:
          name: aniways
          host: ${{ secrets.SSH_HOST }}
          user: ${{ secrets.SSH_USERNAME }}
          ssh_key: ${{ secrets.SSH_PRIVATE_KEY }}
          env_file: ./env
